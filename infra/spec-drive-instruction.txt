In an empty folder create a .NET 8 solution and a console project named Foundry.Agents. Add the Azure.AI.Agents.Persistent, Azure.AI.Projects, Azure.Identity, Azure.Security.KeyVault.Secrets and Microsoft.ApplicationInsights.AspNetCore packages. Create Tools/OpenApi/apispec.json and implement a RemoteDataAgent class that initializes a persistent agent using the SDK, registers the OpenAPI tool inline (OpenApiAnonymousAuthDetails), persists the agent id to Agents/RemoteData/agent-id.txt, and runs a demo prompt using the CreateThread→CreateMessage→CreateRun→Poll flow. Use PersistentAgentsModelFactory for message content, normalize 'today' tokens to ISO date, persist threads in Agents/RemoteData/threads.json with a file-lock per thread, rotate threads after 100 messages, and log Run.LastError with diagnostics. Add a .gitignore to exclude local artifacts and Application Insights wiring. Build and run the project to verify that agent creation and a successful run occur and that the JSON envelope is logged. Commit the code and tag the repo with 'running-checkpoint-YYYY-MM-DD'.